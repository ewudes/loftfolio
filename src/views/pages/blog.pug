extends ../main.layout.pug

block variables
	- var title = 'Обо мне'

block scripts
	script(src='about.bundle.js')

block content
	section.hero
		.hero-row
			.hero__links
				ul.socials.socials__hero
					li.socials__link
						a(class='socials__link', href='#')
							+icon('vk','socials__link-pic socials__link-pic_vk')
					li.socials__link
						a(class='socials__link', href='#')
							+icon('github','socials__link-pic socials__link-pic_gh')
					li.socials__link
						a(class='socials__link', href='#')
							+icon('in','socials__link-pic socials__link-pic_in')

			a(href="").hamburger.hero__menu
				+icon('hamburger','hamburger-pic')

		.hero-row
			.hero__title

				.user.hero__user
					.user__pic
						img.user__pic-img
					.user__description.blog-description
						.block-title.blog-title БЛОГ
						.user__info.blog-info Статьи, которые я написал

	section.blog
		.blog__triangle
			svg(viewBox="0 80 100 10" preserveAspectRatio="none").triangle.triangle_fill
				polygon(points="0,80 0,100 100,100")
				polygon(points="0,100 100,100 100,80")
		.blog__wrapper
			.blog__wrap-left
				nav.blog__nav
					ul.blog__nav-list
						li.blog__nav-item.blog__nav-item--active БЭМ для начинающих
						li.blog__nav-item Что такое Full-Stack разработка?
						li.blog__nav-item Самый необходимый набор Gulp плагинов
						li.blog__nav-item Почему я выбрал Jade
						li.blog__nav-item 5 страхов веб-дизайнеров, связанных с CSS Grid
			.blog__wrap-right
				article.blog__article
					ul.blog__article-list
						li.blog__article-item
							.article__title БЭМ для начинающих
							.article__date 15 июня 2018
							.article__text
								h3 В чем проблема CSS, почему нужны какие-то методы именования?
								ol
									li Отсутствие пространства имен дает возможность совпадения селекторов и их неожиданных влияний (наложение правил, зависимость одних частей страницы от других).
									li Отсутствие изоляции: часть CSS-свойств наследуется, а ни один из нативных механизмов изоляции частей страницы сейчас не имеет приемлемой кроссбраузерности.
									li CSS сложно понять без разметки, к которой он применен.
									li В CSS поощряется каскад, использование которого связывает стилизацию и разметку, что усложняет модификацию и того, и другого.
								h3 Основы методологии БЭМ
								ul
									li Блок - абсолютно независимая, самодостаточная часть страницы.
									li Элемент - часть блока, немыслимая отдельно от своего блока.
									li Модификатор - дополнительный класс, добавление которого как-то меняет внешний вид или поведение блока или элемента.
								h3 Достоинства БЭМ
								ol
									li Полная предсказуемость модификации: меняем что-то в одном блоке, другие блоки не ломаются.
									li Гарантия непересечения имен классов (пространство имен): нет наложений стилей.
									li Нет привязки к разметке: легко менять теги, вложенность элементов.
									li CSS понятен без HTML: быстрее понимание - быстрее работа.
								h3 Недостатки БЭМ
								ol
									li Наличие символов __ и -- в классах вызывают у некоторых эстетов отвращение. (Не такая уж большая плата за получаемые преимущества).
									li Длинные имена классов увеличивают размер разметки. (Но прекрасно сжимаются gzip-ом).
									li У тега может быть 2 и более класса: Блок, Модификатор-1, Модификатор-2. (Ситуация редкая, лучше объединять модификаторы, когда возможно).
								h3 Основные правила обеспечения модульности
								ul
									li Верстка должна быть модульной (любой блок можно вырвать из одного места страницы и вставить в другое, так что бы он не "развалился" и не поломал ничего вокруг)
									li На странице нет "голых" тегов. Все теги имеют свой класс, и стилизируются конкретно по нему.
									li Нет селекторов по тегам.
									li Не использовать относительных селекторов (*, >, +, ~)
									li Зависимость селекторов допускается только от модификаторов блока.
									li Именование классов формируется по правилам синтаксиса БЭМ.
									li Правила позиционирования не применяются к блокам
						li.blog__article-item
							.article__title Что такое Full-Stack разработка?
							.article__date 15 июня 2018
							.article__text
								p По результатам опроса Stack Overflow в 2016 году, Full-Stack разработка — это самое популярное занятие разработчиков. Поэтому неудивительно, что сейчас на западном рынке появляется все больше и больше обучающих программ, которые помогают людям стать Full-Stack разработчиками.
								p Чтобы ответить на вопрос, что такое Full-Stack разработка, и кто такой Full-Stack разработчик, давайте рассмотрим, из чего вообще состоит современная веб-разработка.
								p Современную веб-разработку можно разделить на две большие составляющие: Front-end и Back-end разработка.
								p Front-end разработка (от слова front — «впереди») — то, что вы видите на сайте, его визуальная составляющая. Сюда входят HTML, CSS и по большей части JavaScript. В современной Front-end разработке сейчас актуальны и активно применяются несколько JavaScript фреймворков, из которых, в основном, выбирают Angular, Vue, React. У каждого есть свои плюсы и минусы, и выбирать нужно в зависимости от их области применения. Но здесь есть ключевой момент — вы, по сути, выбираете из JavaScript технологий, так как на данный момент JavaScript является монополистом в этой области.
								p Back-end разработка — это серверная разработка (от слова back — «позади»), и она подразумевает под собой разработку логики вашего сайта, взаимодействие с базой данных и все то, что должно быть на сервере. В Back-end разработке вы можете выбирать из большего количества языков, которые подходят под разные задачи. Back-end вы можете писать, к примеру, на PHP, Java, Node.JS, Python, Ruby и так далее.
						li.blog__article-item
							.article__title Самый необходимый набор Gulp плагинов
							.article__date 15 июня 2018
							.article__text
								p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquid debitis, et ex modi nostrum quibusdam ratione repellat. Aspernatur consequuntur ducimus eum ex explicabo illum in laudantium nisi perferendis voluptas? Ipsum.
								p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ad cum, delectus eveniet neque nisi placeat saepe unde voluptatum. Commodi consectetur, consequatur dolorum iste possimus praesentium repellendus repudiandae soluta! Ad, temporibus?
								p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Aliquam, corporis, distinctio fugiat harum illo itaque nam natus numquam quae quibusdam quisquam quod rerum. Aperiam aspernatur consequatur hic, itaque minus odit?

						li.blog__article-item
							.article__title Почему я выбрал Jade
							.article__date 15 июня 2018
							.article__text
								p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Nostrum odio officiis repellat. Aliquid atque aut beatae commodi ipsam maiores maxime modi molestias, mollitia, natus nostrum officia perferendis quae quam voluptatibus!
								p Lorem ipsum dolor sit amet, consectetur adipisicing elit. Alias delectus, dolorem doloribus ducimus enim ex fuga minima nemo nobis praesentium quae quaerat quibusdam, quidem quisquam quod reprehenderit sint tenetur unde.

						li.blog__article-item
							.article__title 5 страхов веб-дизайнеров, связанных с CSS Grid
							.article__date 15 июня 2018
							.article__text
								p <span>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Architecto asperiores, aspernatur deleniti laborum minus ratione rerum sequi voluptate voluptatum! Consectetur consequuntur, cum doloremque doloribus inventore nihil ratione sed velit voluptas!</span><span>Aliquid architecto commodi consectetur deleniti doloremque ea et illo in ipsum, iure magnam molestiae molestias nemo nobis obcaecati, odio placeat recusandae repudiandae vel voluptas? Amet fugiat illo in sapiente sint!</span>

	footer.footer
		.footer__row
			.footer__col
				nav.menu
					ul.menu__list
						each item in ['Мои работы', 'Обо мне', 'Блог', 'Авторизация']
							li.menu__item
								a(href="").menu__link #{item}

			.footer__col.footer__col_justify_end
				ul.socials
					li.socials__link
						a(class='socials__link socials__link_round', href='#')
							+icon('vk','socials__link-pic socials__link-pic_round socials__link-pic_vk')
					li.socials__link
						a(class='socials__link socials__link_round', href='#')
							+icon('github','socials__link-pic socials__link-pic_round socials__link-pic_gh')
					li.socials__link
						a(class='socials__link socials__link_round', href='#')
							+icon('in','socials__link-pic socials__link-pic_round socials__link-pic_in')

		.footer__row
			.footer__col
				p Я веб-разработчик из Новосибирска, и этот сайт я сделал в рамках обучения в Школе онлайн образования LoftSchool.
			.footer__col.footer__col_justify_end
				p &copy Владимир Астахов | создано с любовью в LoftSchool | 2016